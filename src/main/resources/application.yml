spring:
  profiles:
    active: dev
  application:
    name: ecommerce-api

# PERFIL DEV
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/ecommerce_dev
    username: ${DB_USERNAME:ecommerce_user}
    password: ${DB_PASSWORD:dev_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

server:
  port: 8080

cors:
  allowed-origins: "http://localhost:3000,http://localhost:4200"
  allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

jwt:
  secret: ${JWT_SECRET:ecommerce-super-secret-key-for-development-only-min-256-bits}
  expiration: 86400000
  issuer: ecommerce-api-dev

logging:
  level:
    com.miempresa.ecommerce: DEBUG
    org.springframework.security: DEBUG

# PERFIL PROD
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  port: ${SERVER_PORT:8080}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
  allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000
  issuer: ecommerce-api-prod

logging:
  level:
    com.miempresa.ecommerce: INFO
    org.springframework.security: WARN
